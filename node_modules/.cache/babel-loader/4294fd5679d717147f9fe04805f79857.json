{"ast":null,"code":"var _jsxFileName = \"/Volumes/Storage/Code/national-parks-explorer/front-end/src/containers/AllContainer.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { NavigationBar } from './NavigationBar';\nimport Parks from './Parks';\nimport PastVisit from './PastVisit';\nimport FutureVisit from './FutureVisit';\nimport { NoMatch } from '../components/NoMatch';\nimport { Layout } from './Layout';\nimport { ParkDetails } from '../components/ParkDetails';\nimport { Map } from '../components/Map';\nimport MyModal from '../components/MyModal';\nimport Profile from './Profile';\nimport Login from './Login';\nconst URL = `http://localhost:3000/`;\nexport default class AllContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postVisit = visit => {\n      let newVisit = visit;\n      newVisit['park_id'] = this.state.newVisit['park_id'];\n      newVisit['user_id'] = this.state.user['id'];\n      let url = URL + this.state.newVisitState.toLowerCase() + '_visits';\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          accepts: 'application/json'\n        },\n        body: JSON.stringify({\n          visit: newVisit\n        })\n      }).then(res => res.json()).then(postVisit => {\n        if (this.state.newVisit === \"Future\") {\n          this.modalClose();\n          let visits = [...this.state.futureVisits, postVisit];\n          this.setState({\n            futureVisits: visits,\n            redirect: /*#__PURE__*/React.createElement(Redirect, {\n              to: \"/future_visits\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 59\n              }\n            })\n          });\n        } else {\n          this.modalClose();\n          let visits = [...this.state.pastVisits, postVisit];\n          this.setState({\n            pastVisits: visits,\n            redirect: /*#__PURE__*/React.createElement(Redirect, {\n              to: \"/past_visits\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 57\n              }\n            })\n          });\n        }\n      });\n    };\n\n    this.modalShow = () => this.setState({\n      modalShow: true\n    });\n\n    this.modalClose = () => this.setState({\n      modalShow: false\n    });\n\n    this.searchChange = e => e.target.value.length > 2 ? this.setState({\n      search: e.target.value.toLowerCase()\n    }) : this.setState({\n      search: e.target.value\n    });\n\n    this.showPark = park => this.setState({\n      showPark: park\n    });\n\n    this.backToParks = () => this.setState({\n      showPark: false\n    });\n\n    this.filterPark = park => {\n      const search = this.state.search;\n      return park.fullname.toLowerCase().includes(search) || park.description.toLowerCase().includes(search) || park.weatherInfo.toLowerCase().includes(search) || park.states.includes(search);\n    };\n\n    this.planNewVisit = park => {\n      this.setState({\n        newVisitState: \"Future\",\n        newVisit: {\n          park_id: park.id\n        }\n      });\n      this.modalShow();\n    };\n\n    this.logPastVisit = park => {\n      this.setState({\n        newVisitState: \"Past\",\n        newVisit: {\n          park_id: park.id\n        }\n      });\n      this.modalShow();\n    };\n\n    this.displayParks = () => {\n      let parks = this.state.parks;\n      return parks.filter(park => this.filterPark(park));\n    };\n\n    this.checkCurrentUser = () => {\n      let token = localStorage.token;\n      fetch(`http://localhost:3000/profile`, {\n        method: 'GET',\n        headers: {\n          Authorization: token\n        }\n      }).then(res => res.json()).then(data => this.setState({\n        user: data.user\n      }));\n    };\n\n    this.handleLogin = e => {\n      e.preventDefault();\n      let userObject = {\n        userName: e.target.userName.value,\n        password: e.target.password.value\n      };\n      fetch(URL + 'login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: userObject\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.message) {\n          alert(\"Sorry, your username or password is incorrect.\");\n          this.setState({\n            errors: data.message\n          }, () => console.log(\"errors\", this.state.errors));\n        } else {\n          this.setState({\n            user: data.user,\n            redirect: /*#__PURE__*/React.createElement(Redirect, {\n              to: \"/profile\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 54\n              }\n            })\n          });\n          localStorage.setItem('token', data.jwt);\n          window.history.pushState({\n            url: \"/profile\"\n          }, \"\", \"/profile\");\n          this.forceUpdate();\n        }\n      });\n      e.target.reset();\n    };\n\n    this.handleLogout = () => {\n      localStorage.removeItem('token');\n      this.setState({\n        redirect: /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 31\n          }\n        })\n      });\n    };\n\n    this.handleCreateUser = e => {\n      e.preventDefault();\n      console.log(e.target);\n      let newUserObject = {\n        userName: e.target.userName.value,\n        password: e.target.password.value,\n        firstName: e.target.firstName.value,\n        lastName: e.target.lastName.value,\n        profilePicture: e.target.profilePicture.value\n      };\n      fetch(URL + 'users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: newUserObject\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.errors) {\n          alert(\"Sorry, your username or password is incorrect.\");\n          this.setState({\n            errors: data.message\n          }, () => console.log(\"errors\", this.state.errors));\n        } else {\n          this.setState({\n            user: data.user,\n            signUpForm: false,\n            redirect: /*#__PURE__*/React.createElement(Redirect, {\n              to: \"/profile\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 73\n              }\n            })\n          });\n          localStorage.setItem('token', data.jwt);\n          window.history.pushState({\n            url: \"/profile\"\n          }, \"\", \"/profile\");\n          this.forceUpdate();\n        }\n      });\n    };\n\n    this.showSignUpForm = e => {\n      e.preventDefault();\n      this.state.signUpForm ? this.setState({\n        signUpForm: false\n      }) : this.setState({\n        signUpForm: true\n      });\n    };\n\n    this.state = {\n      newVisitState: '',\n      newVisit: {},\n      modalShow: false,\n      parks: [],\n      showPark: false,\n      pastVisits: [],\n      futureVisits: [],\n      search: \"\",\n      user: {},\n      signUpForm: false\n    };\n  }\n\n  fetchParks() {\n    fetch(URL + 'parks').then(res => res.json()).then(parks => this.setState({\n      parks: parks\n    }));\n  }\n\n  fetchVisits() {\n    fetch(URL + 'past_visits').then(res => res.json()).then(data => {\n      this.setState({\n        pastVisits: data\n      });\n    });\n    fetch(URL + 'future_visits').then(res => res.json()).then(data => {\n      this.setState({\n        futureVisits: data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchParks();\n    this.fetchVisits();\n    if (localStorage.token) this.checkCurrentUser();\n  }\n\n  // RENDER & ROUTES //\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyModal, {\n      show: this.state.modalShow,\n      onHide: this.modalClose,\n      newVisitState: this.state.newVisitState,\n      postVisit: this.postVisit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(NavigationBar, {\n      searchChange: this.searchChange,\n      loggedIn: this.state.loggedIn,\n      handleLogout: this.handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, this.state.redirect, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => this.state.showPark ? /*#__PURE__*/React.createElement(ParkDetails, {\n        park: this.state.showPark,\n        backToParks: this.backToParks,\n        planNewVisit: this.planNewVisit,\n        logPastVisit: this.logPastVisit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(Map, {\n        parks: this.displayParks(),\n        showPark: this.showPark,\n        planNewVisit: this.planNewVisit,\n        logPastVisit: this.logPastVisit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/parks\",\n      render: () => this.state.showPark ? /*#__PURE__*/React.createElement(ParkDetails, {\n        park: this.state.showPark,\n        backToParks: this.backToParks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(Parks, {\n        parks: this.displayParks(),\n        showPark: this.showPark,\n        planNewVisit: this.planNewVisit,\n        logPastVisit: this.logPastVisit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/past_visits\",\n      render: () => /*#__PURE__*/React.createElement(PastVisit, {\n        pastVisits: this.state.pastVisits,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/future_visits\",\n      render: () => /*#__PURE__*/React.createElement(FutureVisit, {\n        futureVisits: this.state.futureVisits,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        handleLogin: this.handleLogin,\n        handleLogout: this.handleLogout,\n        handleCreateUser: this.handleCreateUser,\n        showSignUpForm: this.showSignUpForm,\n        signUpForm: this.state.signUpForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/profile\",\n      render: () => /*#__PURE__*/React.createElement(Profile, {\n        parks: this.state.user.parks,\n        user: this.state.user,\n        handleLogout: this.handleLogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: NoMatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Storage/Code/national-parks-explorer/front-end/src/containers/AllContainer.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Redirect","NavigationBar","Parks","PastVisit","FutureVisit","NoMatch","Layout","ParkDetails","Map","MyModal","Profile","Login","URL","AllContainer","constructor","props","postVisit","visit","newVisit","state","user","url","newVisitState","toLowerCase","fetch","method","headers","accepts","body","JSON","stringify","then","res","json","modalClose","visits","futureVisits","setState","redirect","pastVisits","modalShow","searchChange","e","target","value","length","search","showPark","park","backToParks","filterPark","fullname","includes","description","weatherInfo","states","planNewVisit","park_id","id","logPastVisit","displayParks","parks","filter","checkCurrentUser","token","localStorage","Authorization","data","handleLogin","preventDefault","userObject","userName","password","message","alert","errors","console","log","setItem","jwt","window","history","pushState","forceUpdate","reset","handleLogout","removeItem","handleCreateUser","newUserObject","firstName","lastName","profilePicture","signUpForm","showSignUpForm","fetchParks","fetchVisits","componentDidMount","render","loggedIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { NavigationBar } from './NavigationBar';\nimport Parks from './Parks'\nimport PastVisit from './PastVisit';\nimport FutureVisit from './FutureVisit';\nimport { NoMatch } from '../components/NoMatch'\nimport { Layout } from './Layout';\nimport { ParkDetails } from '../components/ParkDetails';\nimport { Map } from '../components/Map';\nimport MyModal from '../components/MyModal'\nimport Profile from './Profile'\nimport Login from './Login'\n\nconst URL = `http://localhost:3000/`\n\nexport default class AllContainer extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      newVisitState: '',\n      newVisit: {},\n      modalShow: false,\n      parks: [],\n      showPark: false,\n      pastVisits: [],\n      futureVisits: [],\n      search: \"\",\n      user: {},\n      signUpForm: false\n    }\n  }\n\n  postVisit = (visit) => {\n    let newVisit = visit\n    newVisit['park_id'] = this.state.newVisit['park_id']\n    newVisit['user_id'] = this.state.user['id']\n    let url = URL + this.state.newVisitState.toLowerCase() + '_visits'\n\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', accepts: 'application/json' },\n      body: JSON.stringify({ visit: newVisit })\n    })\n      .then(res => res.json())\n      .then(postVisit => {\n        if (this.state.newVisit === \"Future\") {\n          this.modalClose()\n          let visits = [...this.state.futureVisits, postVisit]\n          this.setState({ futureVisits: visits, redirect: <Redirect to='/future_visits' /> })\n        } else {\n          this.modalClose()\n          let visits = [...this.state.pastVisits, postVisit]\n          this.setState({ pastVisits: visits, redirect: <Redirect to='/past_visits' /> })\n        }\n      })\n  }\n\n  modalShow = () => this.setState({ modalShow: true })\n  modalClose = () => this.setState({ modalShow: false })\n  searchChange = (e) => e.target.value.length > 2 ?\n    this.setState({ search: e.target.value.toLowerCase() }) :\n    this.setState({ search: e.target.value })\n  showPark = (park) => this.setState({ showPark: park })\n  backToParks = () => this.setState({ showPark: false })\n  filterPark = (park) => {\n    const search = this.state.search\n    return park.fullname.toLowerCase().includes(search) ||\n      park.description.toLowerCase().includes(search) ||\n      park.weatherInfo.toLowerCase().includes(search) ||\n      park.states.includes(search)\n  }\n\n  planNewVisit = (park) => {\n    this.setState({ newVisitState: \"Future\", newVisit: { park_id: park.id } })\n    this.modalShow()\n  }\n\n  logPastVisit = (park) => {\n    this.setState({ newVisitState: \"Past\", newVisit: { park_id: park.id } })\n    this.modalShow()\n  }\n\n  fetchParks() {\n    fetch(URL + 'parks')\n      .then(res => res.json())\n      .then(parks => this.setState({ parks: parks })\n    )\n  }\n\n  fetchVisits() {\n    fetch(URL + 'past_visits')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ pastVisits: data })\n      })\n\n    fetch(URL + 'future_visits')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ futureVisits: data })\n      })\n  }\n\n  displayParks = () => {\n    let parks = this.state.parks\n    return parks.filter(park => this.filterPark(park))\n  }\n\n  componentDidMount() {\n    this.fetchParks()\n    this.fetchVisits()\n    if (localStorage.token) this.checkCurrentUser()\n  }\n\n  checkCurrentUser = () => {\n    let token = localStorage.token\n    fetch(`http://localhost:3000/profile`, {\n      method: 'GET',\n      headers: { Authorization: token } })\n      .then(res => res.json())\n      .then(data => this.setState({ user: data.user })\n    )\n  }\n\n\n  // LOGIN & LOGOUT //\n\n  handleLogin = (e) => {\n    e.preventDefault()\n\n    let userObject = {\n      userName: e.target.userName.value,\n      password: e.target.password.value\n    }\n\n    fetch(URL + 'login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ user: userObject })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.message) {\n          alert(\"Sorry, your username or password is incorrect.\")\n          this.setState({ errors: data.message }, () => console.log(\"errors\", this.state.errors))\n        }\n        else {\n          this.setState({ user: data.user, redirect: <Redirect to='/profile' /> })\n          localStorage.setItem('token', data.jwt)\n          window.history.pushState({ url: \"/profile\" }, \"\", \"/profile\")\n          this.forceUpdate()\n        }\n      })\n    e.target.reset()\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem('token')\n    this.setState({ redirect: <Redirect to='/login' /> })\n  }\n\n\n  // NEW USER STUFF //\n\n  handleCreateUser = (e) => {\n    e.preventDefault()\n    console.log(e.target)\n\n    let newUserObject = {\n      userName: e.target.userName.value,\n      password: e.target.password.value,\n      firstName: e.target.firstName.value,\n      lastName: e.target.lastName.value,\n      profilePicture: e.target.profilePicture.value\n    }\n\n    fetch(URL + 'users', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ user: newUserObject })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.errors) {\n          alert(\"Sorry, your username or password is incorrect.\")\n          this.setState({ errors: data.message }, () => console.log(\"errors\", this.state.errors))\n        }\n        else {\n          this.setState({ user: data.user, signUpForm: false, redirect: <Redirect to='/profile' /> })\n          localStorage.setItem('token', data.jwt)\n          window.history.pushState({ url: \"/profile\" }, \"\", \"/profile\")\n          this.forceUpdate()\n        }\n      })\n  }\n\n  showSignUpForm = (e) => {\n    e.preventDefault()\n    this.state.signUpForm ? this.setState({ signUpForm: false }) : this.setState({ signUpForm: true })\n  }\n\n\n  // RENDER & ROUTES //\n\n  render() {\n    return (\n      <React.Fragment>\n        <MyModal\n          show={this.state.modalShow}\n          onHide={this.modalClose}\n          newVisitState={this.state.newVisitState}\n          postVisit={this.postVisit} />\n\n        <NavigationBar\n          searchChange={this.searchChange}\n          loggedIn={this.state.loggedIn}\n          handleLogout={this.handleLogout} />\n\n        <Layout>\n          <Router>\n            {this.state.redirect}\n\n            <Switch>\n              <Route exact path=\"/\" render={() => (\n                this.state.showPark ?\n                  <ParkDetails\n                    park={this.state.showPark}\n                    backToParks={this.backToParks}\n                    planNewVisit={this.planNewVisit}\n                    logPastVisit={this.logPastVisit} /> :\n                  <Map\n                    parks={this.displayParks()}\n                    showPark={this.showPark}\n                    planNewVisit={this.planNewVisit}\n                    logPastVisit={this.logPastVisit} />\n              )} />\n\n              <Route path=\"/parks\" render={() => (\n                this.state.showPark ?\n                  <ParkDetails\n                    park={this.state.showPark}\n                    backToParks={this.backToParks} /> :\n                  <Parks\n                    parks={this.displayParks()}\n                    showPark={this.showPark}\n                    planNewVisit={this.planNewVisit}\n                    logPastVisit={this.logPastVisit}\n                  />\n              )} />\n\n              <Route path=\"/past_visits\" render={() => (\n                <PastVisit pastVisits={this.state.pastVisits} />)\n              } />\n\n              <Route path=\"/future_visits\" render={() => (\n                <FutureVisit futureVisits={this.state.futureVisits} />)\n              } />\n\n              <Route path=\"/login\" render={() => (\n                <Login\n                  handleLogin={this.handleLogin}\n                  handleLogout={this.handleLogout}\n                  handleCreateUser={this.handleCreateUser}\n                  showSignUpForm={this.showSignUpForm}\n                  signUpForm={this.state.signUpForm} />\n              )} />\n\n              <Route path=\"/profile\" render={() => (\n                <Profile\n                  parks={this.state.user.parks}\n                  user={this.state.user}\n                  handleLogout={this.handleLogout} />\n              )} />\n\n              <Route component={NoMatch} />\n            </Switch>\n          </Router>\n        </Layout>\n      </React.Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}