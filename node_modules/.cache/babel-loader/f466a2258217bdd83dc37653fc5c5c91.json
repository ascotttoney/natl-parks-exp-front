{"ast":null,"code":"var _jsxFileName = \"/Volumes/Storage/Code/national-parks-explorer/front-end/src/components/ParkDetails.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport Gallery from 'react-awesome-slider';\nimport styles from '../galleryStyles.scss';\nimport { FaMap } from 'react-icons/fa';\nimport { GiPineTree } from 'react-icons/gi';\nexport const ParkDetails = props => {\n  const {\n    url,\n    fullname,\n    states,\n    description,\n    weatherInfo,\n    park_images\n  } = props.park;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GiPineTree, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, \" \", fullname), \" \", /*#__PURE__*/React.createElement(GiPineTree, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 97\n    }\n  }))), /*#__PURE__*/React.createElement(Gallery, {\n    cssModule: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, park_images.map(img => /*#__PURE__*/React.createElement(\"div\", {\n    key: img.id,\n    \"data-src\": img.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-4 text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), \" \", states), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, weatherInfo), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: props.backToParks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-success m-1 float-right\",\n    onClick: e => props.logPastVisit(props.park),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Log Past Visit\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-warning m-1 float-right\",\n    onClick: e => props.planNewVisit(props.park),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \" Plan New Visit\")));\n};","map":{"version":3,"sources":["/Volumes/Storage/Code/national-parks-explorer/front-end/src/components/ParkDetails.js"],"names":["React","Button","Gallery","styles","FaMap","GiPineTree","ParkDetails","props","url","fullname","states","description","weatherInfo","park_images","park","map","img","id","backToParks","e","logPastVisit","planNewVisit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AACpC,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA,WAAzB;AAAsCC,IAAAA,WAAtC;AAAmDC,IAAAA;AAAnD,MAAmEN,KAAK,CAACO,IAA/E;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eACgB;AAAG,IAAA,IAAI,EAAEN,GAAT;AAAc,IAAA,MAAM,EAAC,QAArB;AAA8B,IAAA,GAAG,EAAC,qBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0DC,QAA1D,CADhB,oBACwF,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxF,CADF,CADF,eAOE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEN,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,WAAW,CAACE,GAAZ,CAAgBC,GAAG,iBAAI;AAAK,IAAA,GAAG,EAAEA,GAAG,CAACC,EAAd;AAAkB,gBAAUD,GAAG,CAACR,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CADH,CAPF,eAWE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,OAAeE,MAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAHF,eAKE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,OAAO,EAAEL,KAAK,CAACW,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAUE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iCAFZ;AAGE,IAAA,OAAO,EAAEC,CAAC,IAAIZ,KAAK,CAACa,YAAN,CAAmBb,KAAK,CAACO,IAAzB,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,eAeE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iCAFZ;AAGE,IAAA,OAAO,EAAEK,CAAC,IAAIZ,KAAK,CAACc,YAAN,CAAmBd,KAAK,CAACO,IAAzB,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfF,CAXF,CADF;AAkCD,CApCM","sourcesContent":["import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport Gallery from 'react-awesome-slider'\nimport styles from '../galleryStyles.scss'\nimport { FaMap } from 'react-icons/fa'\nimport { GiPineTree } from 'react-icons/gi'\n\nexport const ParkDetails = (props) => {\n  const { url, fullname, states, description, weatherInfo, park_images } = props.park\n  return (\n    <div className=\"container\">\n      <div className=\"page-header\">\n        <h1 className=\"text-center\">\n          <GiPineTree /><a href={url} target=\"_blank\" rel=\"noopener noreferrer\"> {fullname}</a> <GiPineTree />\n        </h1>\n      </div>\n\n      <Gallery cssModule={styles} >\n        {park_images.map(img => <div key={img.id} data-src={img.url} />)}\n      </Gallery>\n\n      <div className=\"pt-4 text-dark\">\n        <h6><FaMap /> {states}</h6>\n        <p>{description}</p>\n        <p>{weatherInfo}</p>\n\n        <Button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={props.backToParks}>Back</Button>\n\n        <Button\n          type=\"button\"\n          className=\"btn btn-success m-1 float-right\"\n          onClick={e => props.logPastVisit(props.park)}>Log Past Visit</Button>\n\n        <Button\n          type=\"button\"\n          className=\"btn btn-warning m-1 float-right\"\n          onClick={e => props.planNewVisit(props.park)}> Plan New Visit</Button>\n      </div >\n    </div >\n  )\n}\n"]},"metadata":{},"sourceType":"module"}