{"ast":null,"code":"var _jsxFileName = \"/Volumes/Storage/Code/national-parks-explorer/front-end/src/components/Map.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactMap, { Marker, Popup } from 'react-map-gl';\nimport 'mapbox-gl/src/css/mapbox-gl.css';\nimport ParkCard from './ParkCard';\nexport const Map = props => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.560954,\n    longitude: -98.935240,\n    zoom: 4,\n    width: '100vw',\n    height: '100vh'\n  });\n  const [selected, setSelected] = useState(null);\n\n  const getLat = park => park.latLong.slice(4).split(\", long:\").map(num => parseFloat(num))[0];\n\n  const getLong = park => park.latLong.slice(4).split(\", long:\").map(num => parseFloat(num))[1];\n\n  useEffect(() => {\n    const listener = e => e.key === \"Escape\" && setSelected(null);\n\n    window.addEventListener(\"keydown\", listener);\n    return () => window.removeEventListener(\"keydown\", listener);\n  }, []);\n\n  const parkMarker = park => {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: park.id,\n      latitude: getLat(park),\n      longitude: getLong(park),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"marker-btn\",\n      onClick: e => {\n        e.preventDefault();\n        setSelected(park);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://upload.wikimedia.org/wikipedia/commons/1/1d/US-NationalParkService-Logo.svg\",\n      alt: \"Park Logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMap, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoiaGFueHUyNyIsImEiOiJjanh1ajF5bTIxNXZhM2xyczF4cXN4ZjJqIn0.058kHvghPXmU2LOnp_9bwA\" // mapStyle='mapbox://styles/hanxu27/cjxujyxc99bwq1cs1kk4duz8a'\n    ,\n    mapStyle: \"mapbox://styles/hanxu27/cjxvx303m18ce1cqhd5dg3029\",\n    onViewportChange: viewport => setViewport(viewport),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), props.parks.map(parkMarker), selected && /*#__PURE__*/React.createElement(Popup, {\n    latitude: getLat(selected),\n    longitude: getLong(selected),\n    onClose: () => setSelected(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ParkCard, {\n    park: selected,\n    showPark: props.showPark,\n    planNewVisit: props.planNewVisit,\n    logPastVisit: props.logPastVisit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Volumes/Storage/Code/national-parks-explorer/front-end/src/components/Map.js"],"names":["React","useState","useEffect","ReactMap","Marker","Popup","ParkCard","Map","props","viewport","setViewport","latitude","longitude","zoom","width","height","selected","setSelected","getLat","park","latLong","slice","split","map","num","parseFloat","getLong","listener","e","key","window","addEventListener","removeEventListener","parkMarker","id","preventDefault","parks","showPark","planNewVisit","logPastVisit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactMap, { Marker, Popup } from 'react-map-gl';\nimport 'mapbox-gl/src/css/mapbox-gl.css'\nimport ParkCard from './ParkCard'\n\nexport const Map = (props) => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.560954,\n    longitude: -98.935240,\n    zoom: 4,\n    width: '100vw',\n    height: '100vh'\n  })\n  const [selected, setSelected] = useState(null)\n\n  const getLat = (park) => park.latLong.slice(4).split(\", long:\").map(num => parseFloat(num))[0]\n  const getLong = (park) => park.latLong.slice(4).split(\", long:\").map(num => parseFloat(num))[1]\n\n  useEffect(() => {\n    const listener = e => e.key === \"Escape\" && setSelected(null)\n    window.addEventListener(\"keydown\", listener)\n    return () => window.removeEventListener(\"keydown\", listener)\n  }, [])\n\n  const parkMarker = park => {\n    return (\n      <Marker\n        key={park.id}\n        latitude={getLat(park)}\n        longitude={getLong(park)}\n      >\n        <button className=\"marker-btn\" onClick={e => {\n          e.preventDefault()\n          setSelected(park)\n        }} >\n          <img\n            src=\"https://upload.wikimedia.org/wikipedia/commons/1/1d/US-NationalParkService-Logo.svg\"\n            alt=\"Park Logo\" />\n        </button>\n      </Marker>\n    )\n  }\n\n  return (\n    <div>\n      <ReactMap\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiaGFueHUyNyIsImEiOiJjanh1ajF5bTIxNXZhM2xyczF4cXN4ZjJqIn0.058kHvghPXmU2LOnp_9bwA\"\n        // mapStyle='mapbox://styles/hanxu27/cjxujyxc99bwq1cs1kk4duz8a'\n        mapStyle=\"mapbox://styles/hanxu27/cjxvx303m18ce1cqhd5dg3029\"\n        onViewportChange={viewport => setViewport(viewport)}\n      >\n        {props.parks.map(parkMarker)}\n        {selected && (\n          < Popup latitude={getLat(selected)} longitude={getLong(selected)} onClose={() => setSelected(null)}>\n            <ParkCard\n              park={selected}\n              showPark={props.showPark}\n              planNewVisit={props.planNewVisit}\n              logPastVisit={props.logPastVisit} />\n          </Popup>\n        )}\n      </ReactMap>\n    </div >\n  )\n}\n"]},"metadata":{},"sourceType":"module"}